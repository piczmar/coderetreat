repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

eclipse {
    project {
        natures = ['com.android.ide.eclipse.adt.AndroidNature', 'org.eclipse.jdt.core.javanature']
        [
                'com.android.ide.eclipse.adt.ResourceManagerBuilder',
                'com.android.ide.eclipse.adt.PreCompilerBuilder',
                'org.eclipse.jdt.core.javabuilder',
                'com.android.ide.eclipse.adt.ApkBuilder'
        ].each { buildCommand it }
    }
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { entry -> entry.path.toString() == 'org.eclipse.jdt.launching.JRE_CONTAINER' }
            }
        }
        containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK'
    }
}


sourceSets {
    main {
        java {
            srcDirs 'src', 'gen'
        }

        output.classesDir = 'bin/classes'
    }
}

clean {
    delete 'gen'
}

idea {
    module {
        jdkName = 'Android 2.2 Platform'

        sourceDirs += file('gen')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

compileJava.enabled = false

//task compileAndroid << {
////    ant.exec(executable: "ant") {
////        arg(value: "debug")
////    }
//    println( ["ant", "debug"].execute().text )
//}

task updateAndroidProject(type: Exec) {
    inputs.file file('project.properties')
    outputs.file file('local.properties')

    commandLine 'android', 'update', 'project', '-p', '.'
}

task compileAndroid(type: Exec) {
    inputs.file file('build.xml')
    inputs.dir file('src')
    inputs.dir file('res')
    inputs.dir file('assets')

    outputs.dir file('gen')

    commandLine 'ant', 'debug'
}

compileAndroid.dependsOn updateAndroidProject
compileJava.dependsOn compileAndroid

